[{"path":[]},{"path":"https://billingtt.github.io/acledR/articles/acled_codebook.html","id":"overview","dir":"Articles","previous_headings":"","what":"Overview","title":"ACLED Codebook","text":"ACLED project codes reported information type, agents, location, date, characteristics political violence events, demonstrations select politically relevant non-violent events. ACLED focuses tracking range violent non-violent actions political agents, including governments, rebels, militias, identity groups, political parties, external actors, rioters, protesters civilians. Political violence defined use force group political purpose motivation. ACLED records political violence constituent events, intent produce comprehensive overview forms political disorder, expressed violence demonstrations, within across states. politically violent event single altercation often force used one groups toward political end, although non-violent instances – including protests strategic developments – included dataset capture potential pre-cursors critical junctures violent conflict. fundamental unit observation ACLED event. Events involve designated actors – e.g. named rebel group, militia state forces. occur specific named location (identified name geographic coordinates) specific day.","code":""},{"path":[]},{"path":[]},{"path":"https://billingtt.github.io/acledR/articles/acled_codebook.html","id":"event-and-sub-event-types","dir":"Articles","previous_headings":"Variable Details","what":"Event and Sub-Event Types","title":"ACLED Codebook","text":"ACLED collects codes reported information political violence, demonstrations (rioting protesting) select non-violent, politically important events. aims capture modes, frequency intensity political violence opposition occurs. ACLED currently codes six types events twenty-five types sub-events, violent non-violent, may occur period political violence disorder. Full List tab groups sub-event types respective general event type (violent events, demonstrations, non-violent actions), respective event type. tabs Violent Events, Demonstrations, Non-Violent Actions provide complete descriptions event type sub-event type general groupings.","code":""},{"path":[]},{"path":[]},{"path":"https://billingtt.github.io/acledR/articles/acled_codebook.html","id":"battles","dir":"Articles","previous_headings":"","what":"ACLED Codebook","title":"ACLED Codebook","text":"ACLED defines battle “violent interaction two politically organized armed groups particular time location.” Battles can occur armed organised state, non-state, external groups, combination therein. fatality minimum necessary inclusion. Although term “battle” may used describe various kinds encounters parties – e.g. “ceasefire broken” – battles must violent events involving least two armed organized actors. One-sided interactions – e.g. reports shots fired air without target – categorized ‘Strategic developments’ (see ). Violence unarmed civilians categorized ‘Violence civilians’, although civilians can also harmed “collateral damage” ‘Battles’ ‘Explosions/Remote violence’ events. harmed event battle explosions, separate civilian-specific event recorded, fatalities, , aggregated “Fatalities” column. specific elements definition therefore follows: violent interaction exchange armed force, use armed force close distance, armed groups capable inflicting harm upon opposing side. Organized armed groups collective actors assumed operating cohesively around agenda, identity, political purpose, using weapons inflict harm. groups frequently designated name stated agenda. following sub-event types associated ‘Battles’ event type designated according outcome battle event: ‘Armed clash’, ‘Government regains territory’, ‘Non-state actor overtakes territory’. Armed clash: armed, organized groups engage battle, reports indicate change territorial control, correct sub-event type ‘Armed clash’. Non-state actor overtakes territory: non-state actor wins control /subdues government forces, /won territory can now act impunity regarded monopoly force within territory, ‘Non-state actor overtakes territory’ correct sub-event type. Short-lived territorial exchanges last one day coded ‘Armed clash’. cases government non-state forces fight many times location non-state group gains control, final territorial acquisition coded ‘Non-state actor overtakes territory’. battles location coded ‘Armed clash’. sub-event can also used note transfer control one non-state group another violence. Government regains territory: sub-event type used describe cases government forces affiliates fighting competing state forces non-state group regain control location. code used re-establishment government control dual non-state violence. Short-lived territorial exchanges last one day coded ‘Armed clash’.","code":""},{"path":"https://billingtt.github.io/acledR/articles/acled_codebook.html","id":"explosionsremote-violence","dir":"Articles","previous_headings":"","what":"ACLED Codebook","title":"ACLED Codebook","text":"ACLED defines ‘Explosions/Remote violence’ “one-sided violent events tool engaging conflict creates asymmetry taking away ability target respond”. tools used instances ‘Explosions/Remote violence’ explosive devices, including, limited , bombs, grenades, improvised explosive devices (IEDs), artillery fire shelling, missile attacks, heavy machine gun fire, air drone strikes, chemical weapons. Suicide attacks implicating use bombs also fall category. instance ‘Explosion/Remote violence’ reported context ongoing battle, merged coded single battle event. ‘Explosions/Remote violence’ can waged armed agents civilians. accounting attacks civilians, explosions/remote violence civilian targets included. following sub-event types associated ‘Explosions/Remote violence’ event type: ‘Chemical weapon’, ‘Air/drone strike’, ‘Suicide bomb’, ‘Shelling/artillery/missile attack’, ‘Remote explosive/landmine/IED’, ‘Grenade’. Chemical weapon: sub-event type coded whenever chemical weapons used warfare absence engagement. ACLED considers chemical weapons substances listed Schedule 1 Chemical Weapons Convention, including sarin gas, mustard gas, chlorine gas, anthrax. Napalm, white phosphorous, well tear gas non-lethal crowd control substances, considered chemical weapons within sub-event type. Air/drone strike: sub-event type coded whenever air drone strikes occurred absence engagement. Please note air--ground attacks fall sub-event type, including attacks helicopters involve exchange fire forces ground. Suicide bomb: sub-event type coded whenever suicide bombing occurs absence engagement (engagement include gun fire armed groups civilians). also includes suicide vehicle-borne improvised explosive device (SVBIED) attacks Shelling/artillery/missile attack: sub-event type coded whenever long-range artillery missile system used absence engagement. also includes attacks described shelling, use artillery either stand-alone tank based, mortars, guided missiles. Planes shot rockets artillery fall sub-event type; unmanned drones shot , however, given human targets, coded interception ‘Disrupted weapons use’ (see ). Similarly, planes shot using rockets artillery fall sub-event type, interception strike (Iron Dome Israel) coded ‘Disrupted weapons use’ well given human targeting. Rocket-propelled grenades (RPGs) coded ‘Shelling/artillery/missile attack’ sub-event type opposed ‘Grenade’ given similarities artillery. Remote explosive/landmine/IED: sub-event type coded whenever remotely- victim-activated devices detonated absence engagement. Examples include landmines, improvised explosive devices (IEDs) whether alone attached vehicle, sort remotely detonated triggered explosive. Unexploded ordinances (UXO) also fall category. Suicide vehicle-borne improvised explosive devices (SVBIED) coded ‘Suicide bomb’ (see ), safe defusal explosive accidental detonation actor planted (casualties reported) coded ‘Disrupted weapons use’ (see ). Grenade: sub-event type used grenade another explosive thrown absence engagement. Events involving “crude bombs” (Molotov cocktails, firecrackers, cherry bombs, petrol bombs, etc.) well ‘stun grenades’ coded category included either ‘Riots’ ‘Strategic developments’ depending context occurred.","code":""},{"path":"https://billingtt.github.io/acledR/articles/acled_codebook.html","id":"violence-against-civilians","dir":"Articles","previous_headings":"","what":"ACLED Codebook","title":"ACLED Codebook","text":"ACLED defines ‘Violence civilians’ violent events organised armed group deliberately inflicts violence upon unarmed non-combatants. definition, civilians unarmed engage political violence. perpetrators acts include state forces affiliates, rebels, militias, external/forces. cases identity actions victims question (e.g. target may employed police officer), ACLED determines person harmed killed unarmed unable either act defensively counter-attack, act ‘Violence civilians’. minimum number civilian fatalities needed qualify ACLED event. ‘Violence civilians’ includes attempts inflicting harm (e.g. beating, shooting, torture, rape, mutilation, etc.) forcibly disappearing (e.g. kidnapping disappearances) civilian actors. following sub-event types associated ‘Violence civilians’ event type: ‘Sexual violence’, ‘Attack’, ‘Abduction/forced disappearance’. Sexual violence: sub-event type used individual (regardless gender) targeted sexual violence. ‘Sexual violence’ defined largely action inflicts harm sexual nature. means limited solely penetrative rape, also include actions like public stripping, sexual torture men, etc. Attack: sub-event type used civilians targeted violence organised armed actor. Attacks sexual nature coded ‘Sexual violence’. Abduction/Forced disappearance: sub-event type used actor engages abduction forced disappearance civilians, without reports violence. fatalities serious injuries reported consequence forced disappearance, event coded ‘Attack’ instead. Note sub-event type cover state-sanctioned arrests, unless reported conducted extra-judicially. contrast, non-state groups can never engage arrests, activity engaging “arresting” typically coded using sub-event type","code":""},{"path":[]},{"path":"https://billingtt.github.io/acledR/articles/acled_codebook.html","id":"protests","dir":"Articles","previous_headings":"","what":"ACLED Codebook","title":"ACLED Codebook","text":"protest defined public demonstration participants engage violence, though violence may used . Events include individuals groups peacefully demonstrate political entity, government institution, policy, group, tradition, businesses private institutions. Events coded protests symbolic public acts displays flags public prayers (unless accompanied demonstration), protests legislatures parliamentary walkouts MPs staying silent, strikes (unless accompanied demonstration), individual acts self-harm actions (e.g. individual immolations hunger strikes). Protesters noted generic terms (e.g. ‘Protesters (Country)’); representing group, name group recorded respective associated actor column. following sub-event types associated ‘Protests’ event type: ‘Peaceful protest’, ‘Protest intervention’, ‘Excessive force protesters’. Peaceful protest: sub-event type used demonstrators engaged protest engaging violence forms rioting behaviour faced sort force engagement. Protest intervention: sub-event type used individuals engaged peaceful protest attempt disperse suppress protest without serious/lethal injuries reported targeting protesters lethal weapons. Additionally, sub-event type cover instance armed groups rioters interact peaceful protesters without resulting serious/lethal injuries. Excessive force protestors: sub-event type used individuals engaged peaceful protest targeted violence actor leading (lead ) serious/lethal injuries.","code":""},{"path":"https://billingtt.github.io/acledR/articles/acled_codebook.html","id":"riots","dir":"Articles","previous_headings":"","what":"ACLED Codebook","title":"ACLED Codebook","text":"‘Riots’ violent events demonstrators mobs engage disruptive acts, including limited rock throwing, property destruction, etc. may target individuals, property, businesses, rioting groups armed actors. Rioters noted generic terms (e.g. ‘Rioters (Country)’); representing group, name group recorded respective ‘Associated actor’ column. Rioters may begin peaceful protesters, may intent engaging spontaneous disorganized violence beginning actions. Contrary armed groups, rioters use sophisticated weapons guns, knives swords. “Crude bombs” (e.g. Molotov cocktails, petrol bombs, firecrackers) may used rioting behaviour. following sub-event types associated ‘Riots’ event type: ‘Violent demonstration’ ‘Mob violence’. Violent demonstration: sub-event type used group individuals engages demonstration involving violence. Examples rioting behaviour include vandalism; road-blocking using barricades, burning tires, material; types violent /destructive behaviour also included . Mob violence: sub-event type used rioters violently interact rioters, another armed group civilians, outside demonstrations without use lethal weapons like guns, knives, swords, etc. mob defined “large crowd people, especially one disorderly intent causing trouble violence.” Note type violence can also include (unarmed crudely armed) vigilante mobs clashing armed groups attacking civilians. Vigilante groups crudely armed considered spontaneous mobs rather assumed organized hence included .","code":""},{"path":[]},{"path":"https://billingtt.github.io/acledR/articles/acled_codebook.html","id":"strategic-developments","dir":"Articles","previous_headings":"","what":"ACLED Codebook","title":"ACLED Codebook","text":"Agreement Arrests Change group/activity Disrupted weapons use Headquarters base established Looting/property destruction Non-violent transfer territory ","code":""},{"path":"https://billingtt.github.io/acledR/articles/acled_codebook.html","id":"example","dir":"Articles","previous_headings":"Variable Details > Event and Sub-Event Types","what":"Example","title":"ACLED Codebook","text":"see event types sub-event types look practice, let’s pull data Haiti first months 2022 sing acled_api() function: quick data wrangling dplyr plotting ggplot2, see common event_type violence civilians.  Let’s investigate variation common event_type, violence civilians, breaking sub_event_type month.","code":"library(acledR) df_haiti <- acled_api(email = Sys.getenv(\"email_address\"),                    key = Sys.getenv(\"acled_key\"),                    countries = c(\"Haiti\"),                    start_date = \"2022-01-01\",                    end_date = \"2022-03-31\",                    monadic = F) library(dplyr) library(ggplot2)  # event counts by event_type df_haiti %>%    group_by(event_type) %>%    tally() %>%       # start plotting   ggplot() +   geom_bar(aes(x = forcats::fct_reorder(event_type, n), y = n), # reorder bars by count            stat = \"identity\") +   theme_light() +   # flip the axes   coord_flip() +   # name the axes (opposite because coordinates were flipped)   labs(y = \"Events\", x =  \"Event Type\",        title = \"Event Types in Haiti\",        subtitle = \"January through March 2022\") df_haiti %>%    # filter to only violence against civilians   filter(event_type %in% c(\"Violence against civilians\")) %>%    # create an indicator for month   mutate(month = lubridate::month(event_date, label = T)) %>%    # create counts by sub_event_type-month   group_by(sub_event_type, month) %>%    tally() %>%       # start plotting   ggplot() +   geom_bar(aes(x = month, y = n, fill = sub_event_type),            stat = \"identity\") +   # fill palatte   scale_fill_viridis_d() +   theme_light() +   labs(y = \"Events\", x =  \"Month\",        title = \"Violence Against Civilians in Haiti\",        subtitle = \"January through March 2022\")"},{"path":[]},{"path":"https://billingtt.github.io/acledR/articles/acled_codebook.html","id":"overview-1","dir":"Articles","previous_headings":"Variable Details > Actors and Interactions","what":"Overview","title":"ACLED Codebook","text":"ACLED recognizes range actors including state forces, rebels, militias, identity groups, demonstrators, civilians, external forces. ACLED, politically violent actors include government forces affiliates, rebel groups, militias, external private forces (e.g. UN missions) political groups interact issues political authority (e.g. territorial control, government control, access resources, etc.). organised actors official name political purpose, use violence political means. inclusion agents political violence, organizations must cohesive assembled single events, exception riots protests. , events organizations must connected means achieve larger political purpose. necessary sufficient definition actors allows establishment campaigns trajectories movements. Protesters, rioters civilians actors whose inclusion deviates organization armed group rules. Rioters protesters involve spontaneous, atomic acts organization may, may , continue beyond discrete event. Civilians actively choose involved event. name actor noted actor1 actor2 columns dataset. group type recorded inter1 inter2 columns, dual engagement noted interaction column. assoc_actor_1 assoc_actor_2 columns record associated groups specific events well identity specific actors. former case, associated group may allies actions, like two armed organized groups engaging attacks common enemy. latter case, assoc_actor_1 assoc_actor_2 columns may record additional information concerning victims attack socio-political affiliation demonstrators ethno-religious identity civilian victim. ‘Explosions/Remote violence’ event intended armed, organized group, also affects civilians, groups noted – primary actor ostensibly intended target, civilians (collateral damage case) associated actor. ACLED records recognized name groups reported, whenever possible. exceptional circumstances described detail , name group generated reflect origins composition. named actor also designated type organization. thousands individually named groups within ACLED dataset, Inter code groups organizations whether similar organizational structures, goals practices. Group type designates groups one eight ACLED categories assigns number inter column categorization. categories offer way distinguish actors determine patterns activity conform goals organizations. ACLED use pattern activity designate kind agent group : specifically observes goals structure organization, possible, spatial dimension relationships communities. , Inter code group can change time. example, rebel group successful overthrowing regime seceding state, armed agents may become armed wing political party within new regime structure (change Inter code 2 3, e.g. Imbonerakure militia Burundi) government forces new state (change Inter code 2 1, SPLA rebels Sudan turned South Sudan’s state forces). Certain types violent agents may appear fall outside categorization, ACLED designed classifications flexibly fit universe agents operating conflict. example, militant religious organizations can various goals (e.g. Taliban), including overtaking state, influencing political processes supporting regional political elites, engaging communal contests access religious sites. choosing categorize actors rebels, militias, communal organizations, protesters, etc., ACLED allow “insurgents” “terrorists” types agents. Many violent organizations may use insurgency tactics commit acts civilians intended high fatality levels part violent repertoire. Instead, ACLED considers goal organization group basis classification.","code":""},{"path":"https://billingtt.github.io/acledR/articles/acled_codebook.html","id":"inter-codes","dir":"Articles","previous_headings":"Variable Details > Actors and Interactions","what":"Inter Codes","title":"ACLED Codebook","text":"See complete ACLED Codebook details inter code named data.","code":""},{"path":"https://billingtt.github.io/acledR/articles/acled_codebook.html","id":"joined-interaction-codes","dir":"Articles","previous_headings":"Variable Details > Actors and Interactions","what":"Joined Interaction Codes","title":"ACLED Codebook","text":"joined interaction code combination two inter codes associated two main actors. Single actor type codes recorded inter1 inter2 columns, compounded number recorded interaction column. example, country’s military fights political militia group, respective inter1 inter2 codes “1” “3”, respectively, compounded Interaction recorded “13”. Interaction numbers always smallest possible number (example, 37 instead 73), regardless order actor1 actor2. Interaction codes recorded events, including non-violent activity. one-sided events, empty second actor category coded “0”. non-violent rebel event occurs inter1 noted “2”, “20” coded interaction column. main actors recorded “actor1” “actor2” columns basis interaction codes.","code":""},{"path":"https://billingtt.github.io/acledR/articles/acled_codebook.html","id":"example-1","dir":"Articles","previous_headings":"Variable Details > Actors and Interactions","what":"Example","title":"ACLED Codebook","text":"example actors interactions ACLED, let’s consider Yemen January 2022 using acled_api() function call API (read conflict Yemen ACLED’s Yemen Research Hub): month, 894 ACLED events, 28 unique actor1 entries, 24 unique actor2 entries. common actor1 “Operation Restoring Hope”, accounting 50% events. can see “Operation Restoring Hope” coded inter1 = 8, indicating actor falls “External/Forces” category. common actor2 NA 43%, indicating actor2 coded events. next frequent actor2 Military Forces Yemen. Inspecting , see joined interaction column events coded “Sole Action”, mostly activity “Operation Restoring Hope”. Using sub_event_type column tandem actor1 column, see “Operation Restoring Hope” mostly conducted air/drone strikes period.","code":"library(acledR) df_yemen <- acled_api(email = Sys.getenv(\"email_address\"),                    key = Sys.getenv(\"acled_key\"),                    countries = c(\"Yemen\"),                    start_date = \"2022-01-01\",                    end_date = \"2022-01-31\",                    monadic = F) # number of ACLED events df_yemen$event_id_cnty %>% length() #> [1] 894 # number of unique actor1s df_yemen$actor1 %>% unique() %>% length() #> [1] 28 # number of unique actor2s df_yemen$actor2 %>% unique() %>% length() #> [1] 24 df_yemen %>%    janitor::tabyl(actor1) %>%    janitor::adorn_rounding(2) %>%    arrange(-n) %>%    head(5) #>                                                      actor1   n percent #>                                    Operation Restoring Hope 460    0.51 #>  Military Forces of Yemen (2016-) Supreme Political Council 145    0.16 #>                                              Giants Brigade 115    0.13 #>                            Military Forces of Yemen (2012-)  70    0.08 #>                            Unidentified Armed Group (Yemen)  22    0.02 df_yemen %>%    filter(actor1 == \"Operation Restoring Hope\") %>%    pull(inter1) %>%    unique() #> [1] 8 df_yemen %>%    janitor::tabyl(actor2) %>%    select(-valid_percent) %>%    arrange(-n) %>%    head(5) #>                                                      actor2   n    percent #>                                                        <NA> 384 0.42953020 #>  Military Forces of Yemen (2016-) Supreme Political Council 301 0.33668904 #>                                           Civilians (Yemen) 111 0.12416107 #>                            Military Forces of Yemen (2012-)  29 0.03243848 #>                                              Giants Brigade  24 0.02684564 df_yemen %>%    janitor::tabyl(interaction) %>%    janitor::adorn_rounding(2) %>%    arrange(-n) %>%    head(5) #>  interaction   n percent #>           80 324    0.36 #>           13 154    0.17 #>           18 110    0.12 #>           11  95    0.11 #>           17  54    0.06  df_yemen %>%    filter(actor1 == \"Operation Restoring Hope\") %>%    janitor::tabyl(interaction) %>%    janitor::adorn_rounding(2) %>%   arrange(-n) %>%    head(5) #>  interaction   n percent #>           80 320    0.70 #>           18 103    0.22 #>           78  34    0.07 #>           38   3    0.01 #>                     sub_event_type   n percent #>                   Air/drone strike 439    0.95 #>  Shelling/artillery/missile attack  11    0.02 #>                             Attack   2    0.00 #>           Change to group/activity   2    0.00 #>              Disrupted weapons use   2    0.00"},{"path":"https://billingtt.github.io/acledR/articles/acled_codebook.html","id":"time","dir":"Articles","previous_headings":"Variable Details","what":"Time","title":"ACLED Codebook","text":"three types temporal information ACLED event: event_date: date event yyyy-mm-dd format; year: year event yyyy format; time_precision: temporal precision event.","code":""},{"path":"https://billingtt.github.io/acledR/articles/acled_codebook.html","id":"overview-2","dir":"Articles","previous_headings":"Variable Details > Time","what":"Overview","title":"ACLED Codebook","text":"Dates necessary component ACLED event. ACLED events atomic events coded day; military campaign area starts March 1, 1999 lasts March 5, 1999 violent activity reported day, coded five different events ACLED, different date entry. episode entered single campaign violence. allows ACLED record exact number active days. Events source material note occurred space three months – like long-running protests – coded days reported activity took place (90+ days). avoids -counting event occurrence.","code":""},{"path":"https://billingtt.github.io/acledR/articles/acled_codebook.html","id":"precision-codes","dir":"Articles","previous_headings":"Variable Details > Time","what":"Precision Codes","title":"ACLED Codebook","text":"sources include actual date event, time precision code “1” entered. sources note event happened specific week weekend, “2” noted time precision field middle week (weekend) used reference date. sources note event took place within particular month, without reference particular date, month mid-point chosen unless beginning end month noted (case, first last date used, respectively) “3” noted time precision level. ACLED include events less temporal information.","code":""},{"path":"https://billingtt.github.io/acledR/articles/acled_codebook.html","id":"example-2","dir":"Articles","previous_headings":"Variable Details > Time","what":"Example","title":"ACLED Codebook","text":"","code":"library(acledR) df_france <- acled_api(email = Sys.getenv(\"email_address\"),                    key = Sys.getenv(\"acled_key\"),                    countries = c(\"France\"),                    start_date = \"2021-01-01\",                    end_date = \"2021-12-31\",                    monadic = F) df_france %>%    janitor::tabyl(time_precision) %>%    janitor::adorn_rounding(2) #>  time_precision    n percent #>               1 8611    0.99 #>               2   43    0.00 #>               3    2    0.00 df_france %>%    group_by(event_date) %>%    tally() %>%       ggplot() +   geom_line(aes(x = event_date, y = n)) +   theme_light() +   labs(x = \"Event Date\",        y = \"Events per Day\",        title = \"ACLED Events in France\",        subtitle = \"January through December 2021\") df_france %>%    mutate(month = lubridate::month(event_date, label = T)) %>%    group_by(month, time_precision) %>%    tally() %>%       ggplot() +   geom_bar(aes(x = month,                 y = n,                 fill = as.factor(time_precision)),            stat = \"identity\") +   scale_fill_viridis_d(guide = guide_legend(title = \"time_precision\")) +   theme_light() +   labs(x = \"Event Date\",        y = \"Events per Month\",        title = \"ACLED Events in France\",        subtitle = \"January through December 2021\")"},{"path":[]},{"path":"https://billingtt.github.io/acledR/articles/acled_codebook.html","id":"overview-3","dir":"Articles","previous_headings":"Variable Details > Geography","what":"Overview","title":"ACLED Codebook","text":"six different types spatial information recorded ACLED event: continental sub-region event occurred; country event occurred associated ISO code; name first, second third level administrative zones specific location found according GIS-based assessments updated administrative codes; name specific location event; geographic coordinates specific location; spatial precision code. specific location event sought ACLED code, using multiple sources triangulate better location information.","code":""},{"path":[]},{"path":[]},{"path":"https://billingtt.github.io/acledR/articles/acled_codebook.html","id":"example-3","dir":"Articles","previous_headings":"Variable Details > Geography","what":"Example","title":"ACLED Codebook","text":"","code":"library(acledR) df_nigeria <- acled_api(email = Sys.getenv(\"email_address\"),                    key = Sys.getenv(\"acled_key\"),                    countries = c(\"Nigeria\"),                    start_date = \"2022-01-01\",                    end_date = \"2022-01-31\",                    monadic = F) df_nigeria %>%    janitor::tabyl(admin1) %>%    janitor::adorn_rounding(2) %>%    arrange(-n) %>%    head(5) #>   admin1  n percent #>   Kaduna 40    0.10 #>    Borno 37    0.09 #>    Niger 32    0.08 #>  Zamfara 26    0.06 #>  Plateau 21    0.05 library(sf)  # grab admin1 level shapefile for Nigeria admin1_nigeria <- raster::getData(name = \"GADM\", country = \"Nigeria\", level = 1) %>%    # convert to sf object   st_as_sf()  # generate admin1 level counts and join to sf object of admin1s df_nigeria_admin1_counts <-   df_nigeria %>%    group_by(admin1) %>%    tally() %>%    left_join(admin1_nigeria, by = c(\"admin1\" = \"NAME_1\")) %>%    st_as_sf()  # start plotting ggplot() +   geom_sf(data = df_nigeria_admin1_counts,            aes(fill = n),           color = \"white\") +   geom_sf_text(data = df_nigeria_admin1_counts %>%                   arrange(-n) %>%                   head(5),            aes(fill = n, label = admin1),           color = \"gray10\") +   scale_fill_viridis_c(option = \"inferno\",                        guide = guide_colorbar(title = \"Event count\")) +   coord_sf() +   theme_minimal() +   labs(x = \"Longitude\",        y = \"Latitude\",         title = \"ACLED Events across Nigeria\",        subtitle = \"January 2022\")"},{"path":[]},{"path":[]},{"path":[]},{"path":"https://billingtt.github.io/acledR/articles/generate_counts.html","id":"how-have-event-types-in-africa-changed-over-time","dir":"Articles","previous_headings":"Examples","what":"How have event types in Africa changed over time?","title":"Generate Event Counts","text":"analyst might interested conflict event types changed time within continent. example, let’s consider Africa since 2018. Since ACLED codes multiple regions within continent, need identify regions fall within Africa. can see ACLED regions calling acledR::acled_regions data: , see 5 regions Africa, well first date events coded region. can store region names vector called africa_regions request data country within regions since 2018. can generate event counts month region Africa: quick data wrangling pivot data region-event type combination one row filtering total_events event type, can create stacked bar plot event types time country ggplot2:","code":"acledR::acled_regions #> # A tibble: 17 × 4 #>    region region_name               first_event_date last_event_date #>     <dbl> <chr>                     <chr>            <chr>           #>  1      1 Western Africa            1997-01-01       2022-04-15      #>  2      2 Middle Africa             1997-01-01       2022-04-15      #>  3      3 Eastern Africa            1997-01-01       2022-04-15      #>  4      4 Southern Africa           1997-01-05       2022-04-14      #>  5      5 Northern Africa           1997-01-01       2022-04-15      #>  6      7 South Asia                2010-01-01       2022-04-15      #>  7      9 Southeast Asia            2010-01-01       2022-04-15      #>  8     11 Middle East               2015-01-01       2022-04-15      #>  9     12 Europe                    2018-01-01       2022-04-15      #> 10     13 Caucasus and Central Asia 2017-01-01       2022-04-15      #> 11     14 Central America           2018-01-01       2022-04-15      #> 12     15 South America             2018-01-01       2022-04-15      #> 13     16 Caribbean                 2018-01-01       2022-04-15      #> 14     17 East Asia                 2018-01-01       2022-04-15      #> 15     18 North America             2018-01-01       2022-04-15      #> 16     19 Oceania                   2021-01-01       2022-04-14      #> 17     20 Antarctica                2021-03-19       2022-03-25 africa_regions <- c(\"Western Africa\",                      \"Middle Africa\",                      \"Eastern Africa\",                      \"Southern Africa\",                     \"Northern Africa\")  df_africa <- acled_api(email = Sys.getenv(\"email_address\"),                        key = Sys.getenv(\"acled_key\"),                        regions = africa_regions,                        start_date = \"2018-01-01\",                        end_date = \"2022-04-30\",                        monadic = F) df_africa_monthly <-   df_africa %>%    generate_counts(., unit_id = \"region\",                    time_id = \"event_date\",                   time_target = \"month\",                   event_type = c(\"Battles\",                                   \"Violence against civilians\",                                   \"Explosions/Remote violence\",                                   \"Riots\")) library(ggplot2)  df_africa_monthly %>%    tidyr::pivot_longer(cols = -c(region, event_month)) %>%    dplyr::filter(name != \"total_events\") %>%       ggplot() +   geom_bar(aes(x = event_month,                 fill = name,                y = value,                group = region),            position = \"stack\", stat = \"identity\") +   facet_wrap(~region, nrow = 3) +   scale_fill_viridis_d(option = \"inferno\",                         begin = 0.1,                        end = 0.9,                        guide = guide_legend(title = \"Event Type\",                                             reverse = T)) +   theme_light() +   theme(legend.position = c(0.75, 0.15),         legend.background = element_rect(color = \"gray90\"))"},{"path":"https://billingtt.github.io/acledR/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Trey Billing. Maintainer.","code":""},{"path":"https://billingtt.github.io/acledR/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Billing T (2022). acledR: Manipulate ACLED Data. https://github.com/billingtt/acledR, https://billingtt.github.io/acledR/.","code":"@Manual{,   title = {acledR: Manipulate ACLED Data},   author = {Trey Billing},   year = {2022},   note = {https://github.com/billingtt/acledR, https://billingtt.github.io/acledR/}, }"},{"path":"https://billingtt.github.io/acledR/index.html","id":"acledr","dir":"","previous_headings":"","what":"Manipulate ACLED Data","title":"Manipulate ACLED Data","text":"Manipulate ACLED Data","code":""},{"path":"https://billingtt.github.io/acledR/index.html","id":"installation-for-private-repo","dir":"","previous_headings":"","what":"Installation (for private repo)","title":"Manipulate ACLED Data","text":"Since package repo currently private, need tell R Github ’re collaborator. , first create Github personal access token (PAT). can set expire certain time (default) permanent. can initiate process internally via: ’ve copied PAT browser, return R run , store PAT locally. recommend also setting PAT .Rprofile ’s stored R sessions (.e., don’t save PAT paste time re-install). Now can install package automatically locate PAT.","code":"# install.packages(\"usethis\") if not installed already # create personal access token - this should redirect to your github page where you can copy the token usethis::create_github_token() # paste the token where it says YourPAT credentials::set_github_pat(\"YourPAT\") # if you run this, it should print your token; if not we've failed Sys.getenv(\"GITHUB_PAT\") # to set your PAT for all R sessions, run file.edit(file.path(\"~\", \".Rprofile\")) # and then paste credentials::set_github_pat(\"YourPAT\") into the .Rprofile script # save the file # install from github devtools::install_github(\"billingtt/acledR\")"},{"path":"https://billingtt.github.io/acledR/reference/acled_api.html","id":null,"dir":"Reference","previous_headings":"","what":"Request data from ACLED API — acled_api","title":"Request data from ACLED API — acled_api","text":"Processes requests ACLED's API","code":""},{"path":"https://billingtt.github.io/acledR/reference/acled_api.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Request data from ACLED API — acled_api","text":"","code":"acled_api(   email,   key,   countries = NULL,   regions = NULL,   start_date = NULL,   end_date = NULL,   monadic = FALSE )"},{"path":"https://billingtt.github.io/acledR/reference/acled_api.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Request data from ACLED API — acled_api","text":"email character string. Email associated ACLED account registered https://developer.acleddata.com. key character string. Access key associated ACLED account registered https://developer.acleddata.com. countries character vector. Default NULL, return events countries. Pass vector country names retrieve events specific countries. list ACLED country names may found via acledR::acled_countries, regions vector region names (character) region codes (numeric). Default NULL, return events regions.  Pass vector regions names codes retrieve events countries within specific regions. list ACLED regions may found via acledR::acled_regions, start_date character string. Format 'yyyy-mm-dd'. earliest date return events. default NULL, return events available time periods. 'start_date' NULL, 'end_date' must also NULL. end_date character string. Format 'yyyy-mm-dd'. latest date return events. default NULL, return events available time periods. 'end_date' NULL, 'start_date' must also NULL. monadic logical. FALSE (default), returns dyadic data. TRUE, returns monadic data.","code":""},{"path":"https://billingtt.github.io/acledR/reference/acled_api.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Request data from ACLED API — acled_api","text":"Returns tibble ACLED events.","code":""},{"path":"https://billingtt.github.io/acledR/reference/calculate_actor_index.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate actor concentration indices from ACLED data — calculate_actor_index","title":"Calculate actor concentration indices from ACLED data — calculate_actor_index","text":"Calculate actor concentration indices ACLED data","code":""},{"path":"https://billingtt.github.io/acledR/reference/calculate_actor_index.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate actor concentration indices from ACLED data — calculate_actor_index","text":"","code":"calculate_actor_index(events, method = \"Effective actors\")"},{"path":"https://billingtt.github.io/acledR/reference/calculate_actor_index.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate actor concentration indices from ACLED data — calculate_actor_index","text":"events Vector event counts per actor. method Index method. Default \"Effective actors\", Inverse Simpson Index. \"Concentration\" calculates Herfindahl–Hirschman Index.","code":""},{"path":"https://billingtt.github.io/acledR/reference/calculate_actor_index.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate actor concentration indices from ACLED data — calculate_actor_index","text":"Returns data.frame index value, number unique actors, average number events per actor.","code":""},{"path":"https://billingtt.github.io/acledR/reference/generate_counts.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate event counts from ACLED data — generate_counts","title":"Generate event counts from ACLED data — generate_counts","text":"Generate event counts ACLED data","code":""},{"path":"https://billingtt.github.io/acledR/reference/generate_counts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate event counts from ACLED data — generate_counts","text":"","code":"generate_counts(   data,   event_type = NULL,   unit_id,   time_id,   time_target,   start_date = NULL,   end_date = NULL,   add_unit_ids = NULL )"},{"path":"https://billingtt.github.io/acledR/reference/generate_counts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate event counts from ACLED data — generate_counts","text":"data ACLED data event_type Event types include. one event type included, event counts per type total number events returned. unit_id Unit variable time_id Temporal variable time_target Target temporal unit start_date Earliest date include end_date Latest date include add_unit_ids Option add units events certain time periods","code":""},{"path":"https://billingtt.github.io/acledR/reference/generate_counts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate event counts from ACLED data — generate_counts","text":"Returns tibble grouped unit_id","code":""},{"path":"https://billingtt.github.io/acledR/reference/generate_movers.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate moving statistics — generate_movers","title":"Generate moving statistics — generate_movers","text":"Generate moving statistics","code":""},{"path":"https://billingtt.github.io/acledR/reference/generate_movers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate moving statistics — generate_movers","text":"","code":"generate_movers(   data,   var,   unit_id,   time_id,   slide_funs,   slide_periods,   na.rm = T,   complete = T )"},{"path":"https://billingtt.github.io/acledR/reference/generate_movers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate moving statistics — generate_movers","text":"data ACLED data. var Variable interest. unit_id Unit variable. time_id Temporal variable. slide_funs Requested moving statistics. Character vector options including mean, median, sd, min, max. slide_periods many periods past summarize . Vector one integers. Inf includes previous periods. na.rm Whether include NAs calculations. complete Whether requre least requested time horizon lapse prior calculating moving statistics. example, slide_periods = 4, return NAs first 4 periods data begin calculating moving statistic fifth time period. FALSE, moving statistics available time periods calculated, even requested time horizon elapsed.","code":""},{"path":"https://billingtt.github.io/acledR/reference/generate_movers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate moving statistics — generate_movers","text":"Returns tibble grouped unit_id.","code":""},{"path":"https://billingtt.github.io/acledR/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://billingtt.github.io/acledR/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://billingtt.github.io/acledR/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"https://billingtt.github.io/acledR/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling `rhs(lhs)`.","code":""}]
